---
import GitHub from "./icons/GitHub.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import Java from "./icons/Java.astro"
import Spring from "./icons/Spring.astro"
import Jwt from "./icons/Jwt.astro"
import PostgreSQL from "./icons/PostgreSQL.astro"
import Laravel from "./icons/Laravel.astro"
import Postman from "./icons/Postman.astro"

const TAGS = {
  JAVA: {
    name: "Java",
    class: "bg-gray-100 border border-gray-300 text-black dark:bg-white dark:bg-opacity-20 dark:text-white",
    icon: Java,
  },
  SPRING: {
    name: "Spring",
    class: "bg-gray-100 border border-gray-300 text-black dark:bg-white dark:bg-opacity-20 dark:text-white",
    icon: Spring,
  },
  JWT: {
    name: "JWT",
    class: "bg-gray-100 border border-gray-300 text-black dark:bg-white dark:bg-opacity-20 dark:text-white",
    icon: Jwt,
  },
  POSTGRES: {
    name: "PostgreSQL",
    class: "bg-gray-100 border border-gray-300 text-black dark:bg-white dark:bg-opacity-20 dark:text-white",
    icon: PostgreSQL,
  },
  LARAVEL: {
    name: "Laravel",
    class: "bg-gray-100 border border-gray-300 text-black dark:bg-white dark:bg-opacity-20 dark:text-white",
    icon: Laravel,
  },
  POSTMAN: {
    name: "Postman",
    class: "bg-gray-100 border border-gray-300 text-black dark:bg-white dark:bg-opacity-20 dark:text-white",
    icon: Postman,
  },
}
const PROJECTS = [
  {
    title: "Jwt Aunthenticator - SpringBoot",
    description:
      "API REST de autenticación de usuarios mediante la utilización de JWT",
    github: "https://github.com/EdTowers1/OpBoot-jwt",
    image: "/projects/proyectoJwt.png",
    tags: [TAGS.JAVA, TAGS.SPRING, TAGS.JWT, TAGS.POSTGRES],
  },
  {
    title: "Students API REST - Laravel 11",
    description:
      "API RESTful de gestión de estudiantes implementada en laravel 11, por medio de operaciones CRUD (Crear, Leer, Actualizar, Eliminar) para la administración de estudiantes",
    github: "https://github.com/EdTowers1/laravel-crud-api",
    image: "/projects/proyectoLaravel.png",
    tags: [TAGS.LARAVEL, TAGS.POSTMAN],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



